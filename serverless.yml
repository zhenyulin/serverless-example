---
service: serverless-hot-boilerplate

frameworkVersion: ">=1.25.0 <2.0.0"

provider:
  name: aws
  runtime: nodejs8.10
  deploymentBucket: ${self:service}-artefacts-${self:provider.region}
  region: ${opt:region, self:custom.defaultRegion}
  stage: ${opt:stage, 'dev'}
  endpointType: regional
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:*
      Resource:
        Fn::GetAtt:
          - todoExampleTable
          - Arn
  environment:
    DYNAMODB_TABLE: ${self:service}-${self:provider.stage}
    BASE_DOMAIN: ${env:BASE_DOMAIN}

resources:
  Resources:
    todoExampleTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

functions:
  alive:
    handler: src/handlers/__alive.default
    events:
      - http:
          path: __alive
          method: get
          cors: true

  create:
    handler: src/handlers/create.default
    events:
      - http:
          path: todos
          method: post
          cors: true

  list:
    handler: src/handlers/list.default
    events:
      - http:
          path: todos
          method: get
          cors: true

  get:
    handler: src/handlers/get.default
    events:
      - http:
          path: todos/{id}
          method: get
          cors: true

  update:
    handler: src/handlers/update.default
    events:
      - http:
          path: todos/{id}
          method: put
          cors: true

  delete:
    handler: src/handlers/delete.default
    events:
      - http:
          path: todos/{id}
          method: delete
          cors: true

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-create-deployment-bucket
  - serverless-domain-manager
  - serverless-dynamodb-local
  - serverless-webpack
  - serverless-offline

custom:
  defaultRegion: 'eu-west-1'
  webpack:
    packager: 'yarn'
    includeModules: true
  customDomain:
    domainName: api.${env:BASE_DOMAIN}
    endpointType: 'regional'
    certificateRegion: ${self:provider.region}
    createRoute53Record: false
